{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\easy-shop\\\\Screens\\\\Cart\\\\Cart.js\";\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Text, Left, Right, H1 } from \"native-base\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport CartItem from \"./CartItem\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Redux/Actions/cartActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Cart = function Cart(props) {\n  var context = useContext(AuthGlobal);\n  var total = 0;\n  props.cartItems.forEach(function (cart) {\n    return total += cart.product.price_product;\n  });\n  var totalCo2Emission = 0;\n  props.cartItems.forEach(function (cart) {\n    return totalCo2Emission += cart.product.carbonBalance.co2Emission;\n  });\n  var gainCo2Emission = 0;\n  props.cartItems.forEach(function (cart) {\n    return gainCo2Emission += cart.product.carbonBalance.carbonGain;\n  });\n  return React.createElement(React.Fragment, null, props.cartItems.length ? React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(H1, {\n    style: {\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Cart\"), React.createElement(SwipeListView, {\n    data: props.cartItems,\n    renderItem: function renderItem(data) {\n      return React.createElement(CartItem, {\n        item: data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }\n      });\n    },\n    renderHiddenItem: function renderHiddenItem(data) {\n      return React.createElement(View, {\n        style: styles.hiddenContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.hiddenButton,\n        onPress: function onPress() {\n          return props.removeFromCart(data.item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"trash\",\n        color: \"white\",\n        size: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      })));\n    },\n    disableRightSwipe: true,\n    previewOpenDelay: 3000,\n    friction: 1000,\n    tension: 40,\n    leftOpenValue: 75,\n    stopLeftSwipe: 75,\n    rightOpenValue: -75,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.bottomContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"\\u20AC \", total), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \" \", totalCo2Emission), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \" \", gainCo2Emission.toFixed(2), \"%\")), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, context.stateUser.isAuthenticated ? React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Checkout');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Shipping\")) : React.createElement(EasyButton, {\n    secondary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Login\"))), React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Carpools');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Carpools\")))) : React.createElement(Container, {\n    style: styles.emptyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Looks like your cart is empty\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Add products to your cart to get started\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    },\n    removeFromCart: function removeFromCart(item) {\n      return dispatch(actions.removeFromCart(item));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    height: height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'white',\n    elevation: 20\n  },\n  price: {\n    fontSize: 12,\n    margin: 20,\n    color: 'red'\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 70,\n    width: width / 1.2\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["C:/Users/admin/Desktop/easy-shop/Screens/Cart/Cart.js"],"names":["React","useContext","Container","Text","Left","Right","H1","SwipeListView","CartItem","Icon","EasyButton","connect","actions","AuthGlobal","Dimensions","get","height","width","Cart","props","context","total","cartItems","forEach","cart","product","price_product","totalCo2Emission","carbonBalance","co2Emission","gainCo2Emission","carbonGain","length","alignSelf","data","styles","hiddenContainer","hiddenButton","removeFromCart","item","bottomContainer","price","toFixed","stateUser","isAuthenticated","navigation","navigate","color","emptyContainer","mapStateToProps","state","mapDispatchToProps","dispatch","clearCart","StyleSheet","create","alignItems","justifyContent","flexDirection","position","bottom","left","backgroundColor","elevation","fontSize","margin","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  View,\n  Dimensions,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  Container,\n  Text,\n  Left,\n  Right,\n  H1\n} from \"native-base\";\nimport { SwipeListView } from 'react-native-swipe-list-view'\nimport CartItem from './CartItem'\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Redux/Actions/cartActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\"\n\nvar { height, width } = Dimensions.get(\"window\");\n\nconst Cart = (props) => {\n\n  const context = useContext(AuthGlobal);\n\n    var total = 0;\n    props.cartItems.forEach(cart => {\n        return (total += cart.product.price_product)\n    });\n\n    var totalCo2Emission = 0;\n    props.cartItems.forEach(cart => {\n        return (totalCo2Emission += cart.product.carbonBalance.co2Emission)\n    });\n\n    \n    var gainCo2Emission = 0;\n    props.cartItems.forEach(cart => {\n        return (gainCo2Emission += cart.product.carbonBalance.carbonGain)\n    });\n\n  return (\n    <>\n      {props.cartItems.length ? (\n        <Container>\n          <H1 style={{ alignSelf: \"center\" }}>Cart</H1>\n          <SwipeListView\n            data={props.cartItems}\n            renderItem={(data) => (\n             <CartItem item={data} />\n            )}\n            renderHiddenItem={(data) => (\n              <View style={styles.hiddenContainer}>\n                <TouchableOpacity \n                style={styles.hiddenButton}\n                onPress={() => props.removeFromCart(data.item)}\n                >\n                  <Icon name=\"trash\" color={\"white\"} size={30} />\n                </TouchableOpacity>\n              </View>\n            )}\n            disableRightSwipe={true}\n            previewOpenDelay={3000}\n            friction={1000}\n            tension={40}\n            leftOpenValue={75}\n            stopLeftSwipe={75}\n            rightOpenValue={-75}\n          />\n          <View style={styles.bottomContainer}>\n             <Left>\n                <Text style={styles.price}>€ {total}</Text>\n                <Text style={styles.price}> {totalCo2Emission}</Text>\n                <Text style={styles.price}> {gainCo2Emission.toFixed(2)}%</Text>\n            </Left>\n            <Right>\n               \n            </Right>\n            <Right>\n              {context.stateUser.isAuthenticated ? (\n                <EasyButton\n                  primary\n                  medium\n                  onPress={() => props.navigation.navigate('Checkout')}\n                >\n                <Text style={{ color: 'white'  }}>Shipping</Text>\n                </EasyButton>\n               \n              ) : (\n                <EasyButton\n                  secondary\n                  medium\n                  onPress={() => props.navigation.navigate('Login')}\n                >\n                <Text style={{ color: 'white' }}>Login</Text>\n                </EasyButton>\n              )}\n                \n            </Right>\n            <EasyButton\n                primary\n                medium\n                onPress={() => props.navigation.navigate('Carpools')}\n              >\n              <Text style={{ color: 'white' }}>Carpools</Text>\n              </EasyButton>\n          </View>\n        </Container>\n      ) : (\n        <Container style={styles.emptyContainer}>\n          <Text>Looks like your cart is empty</Text>\n          <Text>Add products to your cart to get started</Text>\n        </Container>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cartItems } = state;\n  return {\n    cartItems: cartItems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearCart: () => dispatch(actions.clearCart()),\n    removeFromCart: (item) => dispatch(actions.removeFromCart(item))\n    }\n}\n\nconst styles = StyleSheet.create({\n  emptyContainer: {\n    height: height,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  bottomContainer: {\n      flexDirection: 'row',\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      backgroundColor: 'white',\n      elevation: 20\n  },\n  price: {\n      fontSize: 12,\n      margin: 20,\n      color: 'red'\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 70,\n    width: width / 1.2\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}