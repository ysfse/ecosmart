{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\easy-shop\\\\Screens\\\\Cart\\\\Checkout\\\\Payment.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Container, Header, Content, ListItem, Text, Radio, Right, Left, Picker, Icon, Body, Title } from 'native-base';\nvar methods = [{\n  name: 'Cash on Delivery',\n  value: 1\n}, {\n  name: 'Bank Transfer',\n  value: 2\n}, {\n  name: 'Card Payment',\n  value: 3\n}];\nvar paymentCards = [{\n  name: 'Wallet',\n  value: 1\n}, {\n  name: 'Visa',\n  value: 2\n}, {\n  name: 'MasterCard',\n  value: 3\n}, {\n  name: 'Other',\n  value: 4\n}];\n\nvar Payment = function Payment(props) {\n  var order = props.route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      card = _useState4[0],\n      setCard = _useState4[1];\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }, \"Choose your payment method\"))), React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, methods.map(function (item, index) {\n    return React.createElement(ListItem, {\n      key: item.name,\n      onPress: function onPress() {\n        return setSelected(item.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }\n    }, React.createElement(Left, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, item.name)), React.createElement(Right, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }\n    }, React.createElement(Radio, {\n      selected: selected == item.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }\n    })));\n  }), selected == 3 ? React.createElement(Picker, {\n    mode: \"dropdown\",\n    iosIcon: React.createElement(Icon, {\n      name: \"arrow-down\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }\n    }),\n    headerStyle: {\n      backgroundColor: 'orange'\n    },\n    headerBackButtonTextStyle: {\n      color: '#fff'\n    },\n    headerTitleStyle: {\n      color: '#fff'\n    },\n    selectedValue: card,\n    onValueChange: function onValueChange(x) {\n      return setCard(x);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }, paymentCards.map(function (c, index) {\n    return React.createElement(Picker.Item, {\n      key: c.name,\n      label: c.name,\n      value: c.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 35\n      }\n    });\n  })) : null, React.createElement(View, {\n    style: {\n      marginTop: 60,\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Confirm\", {\n        order: order\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }))));\n};\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/admin/Desktop/easy-shop/Screens/Cart/Checkout/Payment.js"],"names":["React","useState","Container","Header","Content","ListItem","Text","Radio","Right","Left","Picker","Icon","Body","Title","methods","name","value","paymentCards","Payment","props","order","route","params","selected","setSelected","card","setCard","map","item","index","backgroundColor","color","x","c","marginTop","alignSelf","navigation","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, Button } from 'react-native'\nimport {\n    Container,\n    Header,\n    Content,\n    ListItem,\n    Text,\n    Radio,\n    Right,\n    Left,\n    Picker,\n    Icon,\n    Body,\n    Title\n} from 'native-base';\n\nconst methods = [\n    { name: 'Cash on Delivery', value: 1 },\n    { name: 'Bank Transfer', value: 2 },\n    { name: 'Card Payment', value: 3}\n]\n\nconst paymentCards = [\n    { name: 'Wallet', value: 1 },\n    { name: 'Visa', value: 2 },\n    { name: 'MasterCard', value: 3},\n    { name: 'Other', value: 4}\n]\n\nconst Payment = (props) => {\n\n    const order = props.route.params;\n\n    const [selected, setSelected] = useState();\n    const [card, setCard] = useState();\n    return(\n       <Container>\n           <Header>\n               <Body>\n                   <Title>Choose your payment method</Title>\n               </Body>\n           </Header>\n           <Content>\n               {methods.map((item, index) => {\n                   return (\n                       <ListItem key={item.name} onPress={() => setSelected(item.value)}>\n                           <Left>\n                            <Text>{item.name}</Text>\n                           </Left>\n                           <Right>\n                               <Radio selected={selected == item.value}/>\n                           </Right>\n                       </ListItem>\n                   )\n               })}\n               {selected == 3 ? (\n                   <Picker\n                    mode=\"dropdown\"\n                    iosIcon={<Icon name={\"arrow-down\"} />}\n                    headerStyle={{ backgroundColor: 'orange' }}\n                    headerBackButtonTextStyle={{ color: '#fff' }}\n                    headerTitleStyle={{ color: '#fff' }}\n                    selectedValue={card}\n                    onValueChange={(x) => setCard(x)}\n                   >\n                       {paymentCards.map((c, index) => {\n                           return <Picker.Item \n                           key={c.name} \n                           label={c.name} \n                           value={c.name} />\n                       })}\n                   </Picker>\n               ) : null }\n               <View style={{ marginTop: 60, alignSelf: 'center' }}>\n                       <Button \n                       title={\"Confirm\"} \n                       onPress={() => props.navigation.navigate(\"Confirm\", { order })}/>\n               </View>\n           </Content>\n       </Container>\n    )\n}\n\nexport default Payment;"]},"metadata":{},"sourceType":"module"}